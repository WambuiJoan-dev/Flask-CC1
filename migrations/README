# 🦸‍♂️ Heroes & Powers API

A Flask-based RESTful API that models superheroes, their powers, and the strength of those powers. This project demonstrates many-to-many relationships, serialization with `SQLAlchemy-Serializer`, validations, and database migrations.

---

## 🗂 Features

- Models:
  - `Hero`
  - `Power`
  - `HeroPower` (Join Table)

- Relationships:
  - A Hero has many Powers through HeroPowers.
  - A Power has many Heroes through HeroPowers.
  - A HeroPower belongs to a Hero and a Power.

- Validations:
  - `HeroPower.strength` must be one of: `'Strong'`, `'Average'`, `'Weak'`.
  - `Power.description` must be present and **at least 20 characters** long.

- Serialization:
  - Controlled using `serialize_rules` to avoid recursion.

---

## 🛠 Tech Stack

- Python 3.8+
- Flask
- Flask SQLAlchemy
- Flask Migrate
- SQLAlchemy-Serializer
- SQLite (local development)

---
